name: Yum based Linux
on:
  push:
    branches:
      - master
      - fluent-package-lts-v5
  pull_request:
jobs:
  build:
    name: Build
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        label:
          - RockyLinux 8 x86_64
          - AlmaLinux 9 x86_64
          - Amazon Linux 2 x86_64
          - Amazon Linux 2023 x86_64
        include:
          - label: RockyLinux 8 x86_64
            rake-job: rockylinux-8
            test-docker-image: rockylinux:8
            centos-stream: false
          - label: AlmaLinux 9 x86_64
            rake-job: almalinux-9
            test-docker-image: almalinux:9
            centos-stream: false
          - label: Amazon Linux 2 x86_64
            rake-job: amazonlinux-2
            test-docker-image: amazonlinux:2
            centos-stream: false
          - label: Amazon Linux 2023 x86_64
            rake-job: amazonlinux-2023
            test-docker-image: amazonlinux:2023
            centos-stream: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt -V install ruby ruby-bundler ruby-serverspec
          sudo gem install bundler:2.2.9 --no-document
          sudo gem uninstall fileutils
      - name: Build rpm with Docker
        run: |
          rake yum:build YUM_TARGETS=${{ matrix.rake-job }}
      - name: Build v6 rpm with Docker
        run: |
          git config user.email "fluentd@googlegroups.com"
          git config user.name "Fluentd developers"
          git am fluent-package/bump-version-v6.patch
          rake yum:build YUM_TARGETS=${{ matrix.rake-job }}
      - name: Relocate packages
        run: |
          cp -r fluent-package/yum/repositories fluent-package/yum/v6repositories
          find fluent-package/yum/repositories -name 'fluent-package-6*.rpm' | xargs rm -f
          find fluent-package/yum/repositories -name 'fluent-package-debug*-6*.rpm' | xargs rm -f
          find fluent-package/yum/repositories -name 'td-agent_6*.rpm' | xargs rm -f
          find fluent-package/yum/v6repositories -name 'fluent-package-5*.rpm' | xargs rm -f
          find fluent-package/yum/v6repositories -name 'fluent-package-debug*-5*.rpm' | xargs rm -f
          find fluent-package/yum/v6repositories -name 'td-agent-5*.rpm' | xargs rm -f
      - name: Upload fluent-package rpm
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.rake-job }}
          path: fluent-package/yum/repositories
      - name: Upload v6 fluent-package rpm
        uses: actions/upload-artifact@v4
        with:
          name: v6-packages-${{ matrix.rake-job }}
          path: fluent-package/yum/v6repositories
      # TODO move the following steps to "Test" job
      - name: Check Package Size
        run: |
          fluent-package/yum/pkgsize-test.sh ${{ matrix.rake-job }} x86_64
      - name: Installation Test
        run: |
          mkdir -p .bundle
          docker run \
          --rm \
          --tty \
          --env CI=true \
          --volume ${PWD}:/fluentd:ro \
          --env CENTOS_STREAM=${{ matrix.centos-stream }} \
          ${{ matrix.test-docker-image }} \
          /fluentd/fluent-package/yum/install-test.sh
      - name: Serverspec Test
        run: |
          mkdir -p .bundle
          docker run \
          --rm \
          --tty \
          --env CI=true \
          --volume ${PWD}:/fluentd:ro \
          --env CENTOS_STREAM=${{ matrix.centos-stream }} \
          ${{ matrix.test-docker-image }} \
          /fluentd/fluent-package/yum/serverspec-test.sh
      - name: Confluent Test
        run: |
          mkdir -p .bundle
          docker run \
          --rm \
          --tty \
          --env CI=true \
          --volume ${PWD}:/fluentd:ro \
          ${{ matrix.test-docker-image }} \
          /fluentd/fluent-package/yum/confluent-test.sh
      - name: Binstubs Test
        run: |
          mkdir -p .bundle
          docker run \
          --rm \
          --tty \
          --env CI=true \
          --volume ${PWD}:/fluentd:ro \
          --env CENTOS_STREAM=${{ matrix.centos-stream }} \
          ${{ matrix.test-docker-image }} \
          /fluentd/fluent-package/yum/binstubs-test.sh
  v1test:
    name: Test ${{ matrix.label }} ${{ matrix.test }} (CGroup V1)
    needs: build
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        label:
          - AmazonLinux 2 x86_64
          - AmazonLinux 2023 x86_64
        test:
          - "update-from-v4.sh"
          - "downgrade-to-v4.sh"
          - "install-newly.sh local"
          - "install-newly.sh v5"
          - "install-newly.sh lts"
          - "update-to-next-version.sh"
          - "update-to-next-version-with-backward-compat-for-v4.sh"
          - "update-to-next-version-service-status.sh enabled active"
          - "update-to-next-version-service-status.sh enabled inactive"
          - "update-to-next-version-service-status.sh disabled active"
          - "update-to-next-version-service-status.sh disabled inactive"
          - "update-to-next-major-version.sh"
        include:
          - label: AmazonLinux 2 x86_64
            rake-job: amazonlinux-2
            lxc-image: images:amazonlinux/2
          - label: AmazonLinux 2023 x86_64
            rake-job: amazonlinux-2023
            lxc-image: images:amazonlinux/2023
        exclude:
          - label: AmazonLinux 2023 x86_64
            test: update-from-v4.sh
          - label: AmazonLinux 2023 x86_64
            test: update-to-next-version-with-backward-compat-for-v4.sh
          - label: AmazonLinux 2023 x86_64
            test: downgrade-to-v4.sh
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v4
        with:
          name: packages-${{ matrix.rake-job }}
      - uses: actions/download-artifact@v4
        with:
          name: v6-packages-${{ matrix.rake-job }}
          path: v6repositories
      - uses: canonical/setup-lxd@v0.1.1
      - name: Run Test ${{ matrix.test }} on ${{ matrix.lxc-image }}
        run: fluent-package/yum/systemd-test/test.sh ${{ matrix.lxc-image }} ${{ matrix.test }}

  v2test:
    name: Test ${{ matrix.label }} ${{ matrix.test }} (CGroup V2)
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        label:
          - RockyLinux 8 x86_64
          - AlmaLinux 9 x86_64
        test:
          - "update-from-v4.sh"
          - "downgrade-to-v4.sh"
          - "install-newly.sh local"
          - "install-newly.sh v5"
          - "install-newly.sh lts"
          - "update-to-next-version.sh"
          - "update-to-next-version-with-backward-compat-for-v4.sh"
          - "update-to-next-version-service-status.sh enabled active"
          - "update-to-next-version-service-status.sh enabled inactive"
          - "update-to-next-version-service-status.sh disabled active"
          - "update-to-next-version-service-status.sh disabled inactive"
          - "update-to-next-major-version.sh"
        include:
          - label: RockyLinux 8 x86_64
            rake-job: rockylinux-8
            lxc-image: images:rockylinux/8
          - label: AlmaLinux 9 x86_64
            rake-job: almalinux-9
            lxc-image: images:almalinux/9
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v4
        with:
          name: packages-${{ matrix.rake-job }}
      - uses: actions/download-artifact@v4
        with:
          name: v6-packages-${{ matrix.rake-job }}
          path: v6repositories
      - uses: canonical/setup-lxd@v0.1.1
      - name: Run Test ${{ matrix.test }} on ${{ matrix.lxc-image }}
        run: fluent-package/yum/systemd-test/test.sh ${{ matrix.lxc-image }} ${{ matrix.test }}
